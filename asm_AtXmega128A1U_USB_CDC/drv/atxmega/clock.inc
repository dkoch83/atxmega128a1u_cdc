;/*
; * clock.inc
; *
; *  Created: 10.08.2014 01:19:51
; *   Author: Dominik
; */ 

.MACRO SYSCLOCK_INT_2MHZ
	LDI R24, OSC_RC2MEN_bm
	STS OSC_CTRL, R24
	CLOCK_EN_INT_2MHZ_WAIT:
		LDS R24, OSC_STATUS
		SBRS R24, OSC_RC2MRDY_bp
	RJMP CLOCK_EN_INT_2MHZ_WAIT

	LDI R24, CCP_IOREG_gc
	STS CPU_CCP, R24

	LDI R24, CLK_SCLKSEL_RC2M_gc
	STS CLK_CTRL, R24

	;LDI R24, 0x00
	;STS CLK_PSCTRL, R24
.ENDMACRO

.MACRO SYSCLOCK_INT_32MHZ
	LDI R24, OSC_RC32MEN_bm
	STS OSC_CTRL, R24
	CLOCK_EN_INT_32MHZ_WAIT:
		LDS R24, OSC_STATUS
		SBRS R24, OSC_RC32MRDY_bp
	RJMP CLOCK_EN_INT_32MHZ_WAIT

	LDI R24, CCP_IOREG_gc
	STS CPU_CCP, R24

	LDI R24, CLK_SCLKSEL_RC32M_gc
	STS CLK_CTRL, R24

	;LDI R24, 0x00
	;STS CLK_PSCTRL, R24
.ENDMACRO

.MACRO SYSCLOCK_INT_32KHZ
	LDI R24, OSC_RC32KEN_bm
	STS OSC_CTRL, R24
	CLOCK_EN_INT_32KHZ_WAIT:
		LDS R24, OSC_STATUS
		SBRS R24, OSC_RC32KRDY_bp
	RJMP CLOCK_EN_INT_32KHZ_WAIT

	LDI R24, CCP_IOREG_gc
	STS CPU_CCP, R24

	LDI R24, CLK_SCLKSEL_RC32K_gc
	STS CLK_CTRL, R24

	;LDI R24, 0x00
	;STS CLK_PSCTRL, R24
.ENDMACRO

.MACRO SYSCLOCK_EXT_16MHZ
	LDI R24, (OSC_XOSCSEL_XTAL_16KCLK_gc | OSC_FRQRANGE_12TO16_gc)
	STS OSC_XOSCCTRL, R24

	LDS R24, OSC_CTRL
	ORI R24, OSC_XOSCEN_bm
	STS OSC_CTRL, R24
	CLOCK_EN_EXT_16MHZ_WAIT:
		LDS R24, OSC_STATUS
		SBRS R24, OSC_XOSCRDY_bp
	RJMP CLOCK_EN_EXT_16MHZ_WAIT	

	LDI R24, CCP_IOREG_gc
	STS CPU_CCP, R24

	LDI R24, CLK_SCLKSEL_XOSC_gc
	STS CLK_CTRL, R24

	;LDI R24, 0x00
	;STS CLK_PSCTRL, R24
.ENDMACRO

.MACRO  SET_SYSCLOCK_INT_2MHZ
	LDI R24, CCP_IOREG_gc
	STS CPU_CCP, R24

	LDI R24, CLK_SCLKSEL_RC2M_gc
	STS CLK_CTRL, R24

	;LDI R24, 0x00
	;STS CLK_PSCTRL, R24
.ENDMACRO

.MACRO  SET_SYSCLOCK_INT_32MHZ
	LDI R24, CCP_IOREG_gc
	STS CPU_CCP, R24

	LDI R24, CLK_SCLKSEL_RC32M_gc
	STS CLK_CTRL, R24

	;LDI R24, 0x00
	;STS CLK_PSCTRL, R24
.ENDMACRO

.MACRO  SET_SYSCLOCK_INT_32KHZ
	LDI R24, CCP_IOREG_gc
	STS CPU_CCP, R24

	LDI R24, CLK_SCLKSEL_RC32K_gc
	STS CLK_CTRL, R24

	;LDI R24, 0x00
	;STS CLK_PSCTRL, R24
.ENDMACRO

.MACRO  SET_SYSCLOCK_EXT_16MHZ
	LDI R24, CCP_IOREG_gc
	STS CPU_CCP, R24

	LDI R24, CLK_SCLKSEL_XOSC_gc
	STS CLK_CTRL, R24

	;LDI R24, 0x00
	;STS CLK_PSCTRL, R24
.ENDMACRO

.MACRO ENABLE_INT_32KHZ
	LDS R24, OSC_CTRL
	SBR R24, OSC_RC32KEN_bm
	STS OSC_CTRL, R24
	CLOCK_EN_INT_32KHZ_WAIT:
		LDS R24, OSC_STATUS
		SBRS R24, OSC_RC32KRDY_bp
	RJMP CLOCK_EN_INT_32KHZ_WAIT
.ENDMACRO

.MACRO ENABLE_INT_2MHZ
	LDS R24, OSC_CTRL
	SBR R24, OSC_RC2MEN_bm
	STS OSC_CTRL, R24
	CLOCK_EN_INT_2MHZ_WAIT:
		LDS R24, OSC_STATUS
		SBRS R24, OSC_RC2MRDY_bp
	RJMP CLOCK_EN_INT_2MHZ_WAIT
.ENDMACRO

.MACRO ENABLE_INT_32MHZ
	LDS R24, OSC_CTRL
	SBR R24, OSC_RC32MEN_bm
	STS OSC_CTRL, R24
	CLOCK_EN_INT_32MHZ_WAIT:
		LDS R24, OSC_STATUS
		SBRS R24, OSC_RC32MRDY_bp
	RJMP CLOCK_EN_INT_32MHZ_WAIT
.ENDMACRO

.MACRO ENABLE_EXT_16MHZ
	LDI R24, (OSC_XOSCSEL_XTAL_16KCLK_gc | OSC_FRQRANGE_12TO16_gc)
	STS OSC_XOSCCTRL, R24

	LDS R24, OSC_CTRL
	ORI R24, OSC_XOSCEN_bm
	STS OSC_CTRL, R24
	CLOCK_EN_EXT_16MHZ_WAIT:
		LDS R24, OSC_STATUS
		SBRS R24, OSC_XOSCRDY_bp
	RJMP CLOCK_EN_EXT_16MHZ_WAIT
.ENDMACRO

.MACRO DISABLE_INT_2MHZ
	LDS R24, OSC_CTRL
	CBR R24, OSC_RC2MEN_bm
	STS OSC_CTRL, R24
.ENDMACRO

.MACRO DISABLE_INT_32MHZ
	LDS R24, OSC_CTRL
	CBR R24, OSC_RC32MEN_bm
	STS OSC_CTRL, R24
.ENDMACRO

.MACRO DISABLE_INT_32KHZ
	LDS R24, OSC_CTRL
	CBR R24, OSC_RC32KEN_bm
	STS OSC_CTRL, R24
.ENDMACRO

.MACRO DISABLE_EXT_16MHZ
	LDS R24, OSC_CTRL
	CBR R24, OSC_XOSCEN_bm
	STS OSC_CTRL, R24
.ENDMACRO

.MACRO DISABLE_OSC_PLL
	LDS R17, OSC_CTRL
	CBR R17, OSC_PLLEN_bm
	STS OSC_CTRL, R17
.ENDMACRO

.SET INT_2MHZ	=	0b00000000
.SET INT_32MHZ	=	0b10000000	
.SET EXT_16MHZ	=	0b11000000

SET_SYSCLOCK_PLL: ; R16 = Source, R17 = Multi 
	PUSH R17

	CPI R16, INT_2MHZ
	BREQ CLOCK_PLL_INT_2MHZ

	CPI R16, INT_32MHZ
	BREQ CLOCK_PLL_INT_32MHZ

	CPI R16, EXT_16MHZ
	BREQ CLOCK_PLL_EXT_16MHZ

	RJMP CLOCK_PLL_END
	CLOCK_PLL_INT_2MHZ:
		ANDI R17, 0b00011111
		OR   R16, R17

		STS OSC_PLLCTRL, R16
		LDS R17, OSC_CTRL
		ORI R17, OSC_RC2MEN_bm
		STS OSC_CTRL, R17
		CLOCK_PLL_INT_2MHZ_WAIT:
			LDS R17, OSC_STATUS
			SBRS R17,  OSC_RC2MRDY_bp
		RJMP CLOCK_PLL_INT_2MHZ_WAIT

	RJMP CLOCK_PLL_END
	CLOCK_PLL_INT_32MHZ:
		ANDI R17, 0b00011111
		OR   R16, R17

		STS OSC_PLLCTRL, R16
		LDS R17, OSC_CTRL
		ORI R17, OSC_RC32MEN_bm
		STS OSC_CTRL, R17
		CLOCK_PLL_INT_32MHZ_WAIT:
			LDS R17, OSC_STATUS
			SBRS R17, OSC_RC32MRDY_bp
		RJMP CLOCK_PLL_INT_32MHZ_WAIT

	RJMP CLOCK_PLL_END
	CLOCK_PLL_EXT_16MHZ:
		ANDI R17, 0b00011111
		OR   R16, R17

		STS OSC_PLLCTRL, R16
		LDI R17, (OSC_XOSCSEL_XTAL_16KCLK_gc | OSC_FRQRANGE_12TO16_gc)

		LDS R17, OSC_CTRL
		ORI R17, OSC_XOSCEN_bm
		STS OSC_CTRL, R17 
		CLOCK_PLL_EXT_16MHZ_WAIT:
			LDS R17, OSC_STATUS
			SBRS R17, OSC_XOSCRDY_bp
		RJMP CLOCK_PLL_EXT_16MHZ_WAIT
	CLOCK_PLL_END:

	LDS R17, OSC_CTRL
	ORI R17, OSC_PLLEN_bm
	STS OSC_CTRL, R17
	CLOCK_PLL_WAIT:
			LDS R17, OSC_STATUS
			SBRS R17, OSC_PLLRDY_bp		
	RJMP CLOCK_PLL_WAIT

	LDI R17, CCP_IOREG_gc
	STS CPU_CCP, R17

	LDI R17, CLK_SCLKSEL_PLL_gc
	STS CLK_CTRL, R17
	LDI R17, 0x00
	STS CLK_PSCTRL, R17
	POP R17
RET

.SET ULP		= (0x00<<1) ; 1kHz from 32kHz internal ULP
.SET TOSC		= (0x01<<1) ; 1.024kHz from 32.768kHz crystal oscillator on TOSC
.SET RCOSC		= (0x02<<1) ; 1.024kHz from 32.768kHz internal oscillator
.SET TOSC32		= (0x05<<1) ; 32.768kHz from 32.768kHz crystal oscillator on TOSC
.SET RCOSC32	= (0x06<<1) ; 32.768kHz from 32.768kHz internal oscillator
.SET EXTCLK		= (0x07<<1) ; External clock from TOSC1

.MACRO ENABLE_RTC
	LDS R24, CLK_RTCCTRL
	SBR R24, 0b00000001
	STS CLK_RTCCTRL, R24
.ENDMACRO

SET_RTC_SOURCE: ;R16 = Source
	STS CLK_RTCCTRL, R16
RET

